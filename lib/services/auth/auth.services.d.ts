import { StorageService } from './storage.services';
import { IUserData } from '../../interfaces';
import { Permissions, Roles } from '../../enums';
import { ActivatedRouteSnapshot, Router } from '@angular/router';
import { AuthBeService } from './auth.be.services';
import { AuthContextService } from './auth-context.service';
import { ToastService } from '../ui/toast.service';
import * as i0 from "@angular/core";
export declare class AuthService {
    private authContextService;
    private authBeService;
    private router;
    private storageService;
    private toastService;
    Roles: typeof Roles;
    Permissions: typeof Permissions;
    constructor(authContextService: AuthContextService, authBeService: AuthBeService, router: Router, storageService: StorageService, toastService: ToastService);
    login(data: any): void;
    logOutUser(): void;
    logout(): void;
    handleRefreshToken(): void;
    handlePermissionConfig(): void;
    isLoggedIn(): boolean;
    getToken(): string;
    getRefreshToken(): string;
    getCurrentUser(): IUserData;
    getCurrentPermissions(): any[];
    getCurrentRoles(): any[];
    hasAnyCurrentRole(targetRoles: Roles[]): boolean;
    hasCategory(route: ActivatedRouteSnapshot): boolean;
    canDoAction(action: string[]): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<AuthService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AuthService>;
}
